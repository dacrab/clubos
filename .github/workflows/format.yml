# Scheduled auto-formatting workflow for ClubOS
# Deep cleanup and formatting that runs weekly as maintenance

name: 🎨 Scheduled Format Cleanup

on:
  workflow_dispatch: # Allow manual trigger
  schedule:
    - cron: '0 2 * * 1' # Run every Monday at 2 AM UTC (off-peak hours)

# Prevent conflicts with main CI workflow
concurrency:
  group: format-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write

jobs:
  format:
    name: 🎨 Format Code
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # Only run if no other workflows are running
    if: github.repository_owner == 'dacrab' # Adjust to your username/org

    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Fetch recent history to avoid conflicts
          fetch-depth: 10

      - name: 🔍 Check for conflicting workflows
        run: |
          # Wait a bit to ensure no other workflows are starting
          sleep 30

          echo "Checking for running workflows..."
          # This is a safety check - in practice concurrency group handles this

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.20

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 💅 Run Prettier
        run: bun run format

      - name: 🔧 Run ESLint with auto-fix
        run: bun run lint:fix

      - name: 📝 Check for changes
        id: check-changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "📝 Files that will be formatted:" >> $GITHUB_STEP_SUMMARY
            git status --porcelain >> $GITHUB_STEP_SUMMARY
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "✅ No formatting changes needed!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🔄 Create Pull Request
        if: steps.check-changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: '🎨 chore: auto-format code with prettier and eslint'
          title: '🎨 Scheduled format cleanup: Weekly maintenance'
          body: |
            ## 🎨 Scheduled Code Formatting Cleanup

            This PR contains formatting changes from the weekly maintenance cleanup:

            ### 🔧 Changes Applied
            - ✅ Prettier formatting applied
            - ✅ ESLint auto-fixes applied  
            - ✅ Import statements sorted
            - ✅ Tailwind classes organized

            ### 🤖 Automation Details
            - **Triggered**: Weekly scheduled maintenance (Monday 2 AM UTC)
            - **Supplementary**: Main CI workflow handles day-to-day auto-formatting
            - **Safe to merge**: ✅ These are only style changes with no functional impact
            - **Auto-merge**: 🚀 Will be automatically merged by Kodiak after CI passes

            ### 📊 Impact
            - No functional changes
            - Catches any formatting drift over time
            - Maintains code quality standards
            - Complements the auto-formatting in main CI workflow

            ---
            *This PR was automatically created by the ClubOS scheduled formatting workflow*
          branch: auto-format/scheduled-cleanup
          delete-branch: true
          labels: |
            🎨 formatting
            🤖 automated
            📦 maintenance
          draft: false

      - name: 📊 Report completion
        run: |
          if [ "${{ steps.check-changes.outputs.changes }}" = "true" ]; then
            echo "## 🎨 Formatting Complete" >> $GITHUB_STEP_SUMMARY
            echo "✅ Created PR with formatting changes" >> $GITHUB_STEP_SUMMARY
            echo "🚀 PR will be auto-merged by Kodiak after CI passes" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ✨ Code Already Perfect" >> $GITHUB_STEP_SUMMARY
            echo "🎯 No formatting changes were needed" >> $GITHUB_STEP_SUMMARY
            echo "✅ Code formatting is already consistent" >> $GITHUB_STEP_SUMMARY
          fi
